import numpy as np

def build_sequences(min_value, max_value, sequence_number):
   

    seq_1 = np.arange(1, max_value + 1, 2)
    seq_1 = seq_1[0:50]
    seq_1 = seq_1[(seq_1 >= min_value) & (seq_1 <= max_value)]
    

    seq_2 = np.arange(50, min_value - 1, -5)
    seq_2 = seq_2[(seq_2 >= min_value) & (seq_2 <= max_value)]
    seq_2 = seq_2[0:50]

    seq_3 = np.array([2**i for i in range(max_value + 1)])
    seq_3 = seq_3[(seq_3 <= max_value) & (seq_3 >= min_value)]
    seq_3 = seq_3[0:50]

    if sequence_number == 1:
        return seq_1
    elif sequence_number == 2:
        return seq_2
    else:
        return seq_3



def moving_averages(x, k):
 
    build = np.array([])
    for i in range(k, len(x) + 1):
        build = np.append(build, np.mean(x[i-k:i]))
    return build


def block_matrix(A, B):

    new_A = np.append(A, np.zeros((len(A), len(B[0]))), axis = 1)
    new_B = np.append(np.zeros((len(B), len(A[0]))), B, axis = 1)
    C = np.append(new_A, new_B, axis = 0)
    return C



    



